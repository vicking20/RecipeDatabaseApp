// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RecipeDatabaseApp.Entities;

#nullable disable

namespace RecipeDatabaseApp.Migrations
{
    [DbContext(typeof(RecipeDbContext))]
    partial class RecipeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RecipeDatabaseApp.Entities.Category", b =>
                {
                    b.Property<int>("Categoryid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("categoryid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Categoryid"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Categoryid")
                        .HasName("category_pkey");

                    b.HasIndex(new[] { "Name" }, "category_name_key")
                        .IsUnique();

                    b.ToTable("category", (string)null);
                });

            modelBuilder.Entity("RecipeDatabaseApp.Entities.Ingredient", b =>
                {
                    b.Property<int>("Ingredientid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ingredientid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Ingredientid"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Ingredientid")
                        .HasName("ingredient_pkey");

                    b.HasIndex(new[] { "Name" }, "ingredient_name_key")
                        .IsUnique();

                    b.ToTable("ingredient", (string)null);
                });

            modelBuilder.Entity("RecipeDatabaseApp.Entities.Recipe", b =>
                {
                    b.Property<int>("Recipeid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("recipeid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Recipeid"));

                    b.Property<int?>("Cooktime")
                        .HasColumnType("integer")
                        .HasColumnName("cooktime");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int?>("Preptime")
                        .HasColumnType("integer")
                        .HasColumnName("preptime");

                    b.Property<int?>("Servings")
                        .HasColumnType("integer")
                        .HasColumnName("servings");

                    b.HasKey("Recipeid")
                        .HasName("recipe_pkey");

                    b.ToTable("recipe", (string)null);
                });

            modelBuilder.Entity("RecipeDatabaseApp.Entities.Recipeingredient", b =>
                {
                    b.Property<int>("Recipeid")
                        .HasColumnType("integer")
                        .HasColumnName("recipeid");

                    b.Property<int>("Ingredientid")
                        .HasColumnType("integer")
                        .HasColumnName("ingredientid");

                    b.Property<decimal>("Quantity")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("quantity");

                    b.Property<int>("Unitid")
                        .HasColumnType("integer")
                        .HasColumnName("unitid");

                    b.HasKey("Recipeid", "Ingredientid")
                        .HasName("recipeingredient_pkey");

                    b.HasIndex("Ingredientid");

                    b.HasIndex("Unitid");

                    b.ToTable("recipeingredient", (string)null);
                });

            modelBuilder.Entity("RecipeDatabaseApp.Entities.Step", b =>
                {
                    b.Property<int>("Stepid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("stepid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Stepid"));

                    b.Property<string>("Instruction")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("instruction");

                    b.Property<int>("Recipeid")
                        .HasColumnType("integer")
                        .HasColumnName("recipeid");

                    b.Property<int>("Stepnumber")
                        .HasColumnType("integer")
                        .HasColumnName("stepnumber");

                    b.HasKey("Stepid")
                        .HasName("step_pkey");

                    b.HasIndex("Recipeid");

                    b.ToTable("step", (string)null);
                });

            modelBuilder.Entity("RecipeDatabaseApp.Entities.Unit", b =>
                {
                    b.Property<int>("Unitid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("unitid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Unitid"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Unitid")
                        .HasName("unit_pkey");

                    b.HasIndex(new[] { "Name" }, "unit_name_key")
                        .IsUnique();

                    b.ToTable("unit", (string)null);
                });

            modelBuilder.Entity("Recipecategory", b =>
                {
                    b.Property<int>("Recipeid")
                        .HasColumnType("integer")
                        .HasColumnName("recipeid");

                    b.Property<int>("Categoryid")
                        .HasColumnType("integer")
                        .HasColumnName("categoryid");

                    b.HasKey("Recipeid", "Categoryid")
                        .HasName("recipecategory_pkey");

                    b.HasIndex("Categoryid");

                    b.ToTable("recipecategory", (string)null);
                });

            modelBuilder.Entity("RecipeDatabaseApp.Entities.Recipeingredient", b =>
                {
                    b.HasOne("RecipeDatabaseApp.Entities.Ingredient", "Ingredient")
                        .WithMany("Recipeingredients")
                        .HasForeignKey("Ingredientid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("recipeingredient_ingredientid_fkey");

                    b.HasOne("RecipeDatabaseApp.Entities.Recipe", "Recipe")
                        .WithMany("Recipeingredients")
                        .HasForeignKey("Recipeid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("recipeingredient_recipeid_fkey");

                    b.HasOne("RecipeDatabaseApp.Entities.Unit", "Unit")
                        .WithMany("Recipeingredients")
                        .HasForeignKey("Unitid")
                        .IsRequired()
                        .HasConstraintName("recipeingredient_unitid_fkey");

                    b.Navigation("Ingredient");

                    b.Navigation("Recipe");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("RecipeDatabaseApp.Entities.Step", b =>
                {
                    b.HasOne("RecipeDatabaseApp.Entities.Recipe", "Recipe")
                        .WithMany("Steps")
                        .HasForeignKey("Recipeid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("step_recipeid_fkey");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Recipecategory", b =>
                {
                    b.HasOne("RecipeDatabaseApp.Entities.Category", null)
                        .WithMany()
                        .HasForeignKey("Categoryid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("recipecategory_categoryid_fkey");

                    b.HasOne("RecipeDatabaseApp.Entities.Recipe", null)
                        .WithMany()
                        .HasForeignKey("Recipeid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("recipecategory_recipeid_fkey");
                });

            modelBuilder.Entity("RecipeDatabaseApp.Entities.Ingredient", b =>
                {
                    b.Navigation("Recipeingredients");
                });

            modelBuilder.Entity("RecipeDatabaseApp.Entities.Recipe", b =>
                {
                    b.Navigation("Recipeingredients");

                    b.Navigation("Steps");
                });

            modelBuilder.Entity("RecipeDatabaseApp.Entities.Unit", b =>
                {
                    b.Navigation("Recipeingredients");
                });
#pragma warning restore 612, 618
        }
    }
}
